@page "/"
@using Weather.Web.Models
@using Weather.Web.Services
@inject HttpClient Http
@inject WeatherForecastService WeatherForecastService

<PageTitle>Weather.Web</PageTitle>

<h1>Weather/Route Request Demo</h1>

Enter coordinates of path and click "Get Weather" and the route/weather data will be
retrieved from the Azure Function API and displayed as JSON.
<br />
@if (routeWeather != null)
{
    <div>
        @* Display some properties from `travelData` *@
        <p>Route Summary: @routeWeather.StartLocation meters</p>
        @* Add more data display as needed *@
    </div>
    @foreach (var item in routeWeather.RouteLegs)
    {
        <div>
            <p>Route Leg Summary: @item.Address.LocalName</p>
            <p>Route Leg Weather: @item.</p>
        </div>
    }
}
else
{
    <p>Loading data...</p>
}




@code {
    private RouteWeather routeWeather;

    protected override async Task OnInitializedAsync()
    {
        routeWeather = await WeatherForecastService.GetWeatherForecastAsync("start", "end");
    }
    // string? result;
    // UserRouteModel userRouteModel = new UserRouteModel();

    // private async Task Submit()
    // {
    //     var apiUrl = $"http:localhost:7071/api/weather/" +
    //                  $"{userRouteModel.StartLatitude},{userRouteModel.StartLongitude}/" +
    //                  $"{userRouteModel.EndLatitude},{userRouteModel.EndLongitude}";

    //     Call the API
    //     result = await Http.GetStringAsync(apiUrl);
    // }

}